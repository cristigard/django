#DOCS ->> https://docs.djangoproject.com/en/4.2/topics/auth/passwords/
#if have unsalted md5 passwords in DB (like d71e980e3c10cdc306ed79dfda59824d) or want to migrate from other DB 

1.crate a file in accounts/hashers.py
from django.contrib.auth.hashers import PBKDF2PasswordHasher, UnsaltedMD5PasswordHasher
class PBKDF2WrappedMD5PasswordHasher(PBKDF2PasswordHasher):
    algorithm = "pbkdf2_wrapped_md5"

    def encode_md5_hash(self, md5_hash, salt):
        return super().encode(md5_hash, salt)

    def encode(self, password, salt, iterations=None):
        md5_hash = UnsaltedMD5PasswordHasher().encode(password, salt='')
        return self.encode_md5_hash(md5_hash, salt)
  
2. create a migration file in accounts/migrations/001_migrate_md5_password.py
import random
import string
from django.db import migrations
from django.contrib.auth import get_user_model
from ..hashers import PBKDF2WrappedMD5PasswordHasher

def forwards_func(apps, schema_editor):
    User = get_user_model()
    users = User.objects.extra(where=["LENGTH(password) = 32"])
    hasher = PBKDF2WrappedMD5PasswordHasher()

    for user in users:
        salt = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(22))
        md5_hash  = user.password
        user.password = hasher.encode_md5_hash(md5_hash, salt)
        user.save(update_fields=["password"])

class Migration(migrations.Migration):
    dependencies = [
         #last migration
        ("accounts", "0001_initial"), 
    ]

    operations = [
        migrations.RunPython(forwards_func),
    ]

3.add PASSWORD_HASHERS in settings.py
  
PASSWORD_HASHERS = [
    "django.contrib.auth.hashers.PBKDF2PasswordHasher",
    "django.contrib.auth.hashers.MD5PasswordHasher",
    "django.contrib.auth.hashers.UnsaltedMD5PasswordHasher",
    "accounts.hashers.PBKDF2WrappedMD5PasswordHasher",
]

3.migrate
python manage.py migrate 
  
#after migrate the password will be an instance of PBKDF2WrappedMD5PasswordHasher
#after first login Django will convert to PBKDF2PasswordHasher
















  
